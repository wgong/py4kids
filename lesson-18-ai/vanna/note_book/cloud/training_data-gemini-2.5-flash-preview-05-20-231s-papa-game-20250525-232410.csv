id,dataset,question,content,training_data_type
29a795c2-f536-548c-85b1-494e94c547c4-ddl,default,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
4ce614e1-1af5-502f-a106-5c71bd49c66c-ddl,default,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
981a8f6a-292e-5da4-b8f6-c979b05f60b2-ddl,default,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
90d6de66-fbf7-52fd-bf7d-c39796669b7f-ddl,default,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
1323a585-b921-528b-a12c-54697d3801d3-ddl,default,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
a8d77d80-5afb-5178-8491-a4ed1eb6112d-ddl,default,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0f11423b-66c8-5ba4-8e59-2e4f617db70e-ddl,default,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
90be1638-159a-51d4-b376-762b805aae91-ddl,default,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
039a70d7-499f-57e5-9cff-73e7c23dd2b3-ddl,default,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
02ee8d00-a7dd-5598-b62b-e3a06084dbda-ddl,default,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
38197d19-a90b-5ebe-b51d-eeee8760b334-ddl,default,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
833f07cf-68a0-5ca8-afda-dcf56dd90d92-ddl,default,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c4ac6533-13e1-5879-bf15-9abf51e0c61c-ddl,default,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
1b4e1e26-6cfa-573b-94b7-055aa1257b40-ddl,default,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
020848a7-bac7-53cf-9af9-ca0f8e540216-ddl,default,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
a9a6eea5-de78-5fc3-8650-31d9b258fda6-ddl,default,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
58dac216-497c-5225-8d22-b59885250762-ddl,default,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
4dc745a8-375e-51c7-b9cb-e93f6b179882-ddl,default,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
bb5b15de-95e3-5a54-bf49-a808285bc886-ddl,default,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
4bbdce6c-4cbd-53a7-98d6-455b65c23f1c-ddl,default,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
cec55741-f7e6-50f6-ace5-f7ee61430d57-ddl,default,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
88d03b79-b19b-5851-a54e-4650cd084666-ddl,default,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
93908e71-4aa4-5332-b504-7749472931a8-ddl,default,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
e2cdfd36-5040-5cc6-82cc-24af4c8ec105-doc,default,,In the chinook database invoice means order,documentation
51524272-01ed-56e4-887d-aa51c3d7f43a-sql,default,How many customers are there,"SELECT
  COUNT(CustomerId)
FROM customers limit 20",sql
8d9987bc-ebb3-58b8-95b7-374639e1b1c9-sql,default,Can you list all tables in the SQLite database catalog?,"SELECT
  name
FROM sqlite_master
WHERE
  type = 'table' AND name NOT LIKE 'sqlite_%' limit 20",sql
0356ac68-a873-5873-90f3-a52c8c149ac7-sql,default,which table stores customer's orders,"SELECT
  name
FROM sqlite_master
WHERE
  type = 'table' AND name = 'invoices' limit 20",sql
505de40e-586e-572c-a10a-a0306ebcdd5a-sql,default,what are the top 5 countries that customers come from?,"SELECT
  Country,
  COUNT(CustomerId) AS NumberOfCustomers
FROM customers
GROUP BY
  Country
ORDER BY
  NumberOfCustomers DESC
LIMIT 5;",sql
ac016475-5d44-5a64-8cfe-fb6bad10ae89-sql,default,List all albums and their corresponding artist names  ,"SELECT
  T1.Title,
  T2.Name
FROM albums AS T1
INNER JOIN artists AS T2
  ON T1.ArtistId = T2.ArtistId limit 20",sql
5646256b-4312-5108-8a86-7eac8e79da47-sql,default,"
                    Generating SQL for this question: 
                    Generating SQL for this question: Find all tracks with a name containing ""What"" (case-insensitive) 
                    results in the following error: [ERROR-SQL] Failed to generate SQL for prompt: Find all tracks with a name containing ""What"" (case-insensitive)  with the following exception: 
429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 46
}
] .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-SQL] Failed to generate SQL for prompt: Find all tracks with a name containing ""What"" (case-insensitive)  with the following exception: 
429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 46
}
] .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT
  *
FROM tracks
WHERE
  Name LIKE '%What%' COLLATE NOCASE limit 20",sql
919d2ef7-cf02-51b3-9390-4e13c1e5386e-sql,default,"
                    Generating SQL for this question: 
                    Generating SQL for this question: 
                    Generating SQL for this question: Find all tracks with a name containing ""What"" (case-insensitive) 
                    results in the following error: [ERROR-SQL] Failed to generate SQL for prompt: Find all tracks with a name containing ""What"" (case-insensitive)  with the following exception: 
429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 46
}
] .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-SQL] Failed to generate SQL for prompt: Find all tracks with a name containing ""What"" (case-insensitive)  with the following exception: 
429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 46
}
] .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-SQL] Failed to generate SQL for prompt: Find all tracks with a name containing ""What"" (case-insensitive)  with the following exception: 
429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 46
}
] .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT
  *
FROM tracks
WHERE
  Name LIKE '%What%' COLLATE NOCASE limit 20",sql
74b95ac2-9b3c-5c86-afd6-061cae7fee89-sql,default,Get the total number of invoices for each customer,"SELECT
  T1.FirstName,
  T1.LastName,
  COUNT(T2.InvoiceId) AS NumberOfInvoices
FROM customers AS T1
INNER JOIN invoices AS T2
  ON T1.CustomerId = T2.CustomerId
GROUP BY
  T1.CustomerId,
  T1.FirstName,
  T1.LastName limit 20",sql
6e613063-b86d-5259-8b75-f0f66e64af29-sql,default,Find the total number of invoices per country,"SELECT
  BillingCountry,
  COUNT(InvoiceId) AS TotalInvoices
FROM invoices
GROUP BY
  BillingCountry limit 20",sql
34ec63d1-6e6c-571c-9ff8-5877d7636fbd-sql,default,List all invoices with a total exceeding $10,"SELECT
  *
FROM invoices
WHERE
  Total > 10 limit 20",sql
a8979eeb-8d03-5367-9b88-79e34b0e535b-sql,default,Find all invoices since 2010 and the total amount invoiced:,"SELECT
  InvoiceId,
  InvoiceDate,
  Total
FROM invoices
WHERE
  InvoiceDate >= '2010-01-01' limit 20",sql
261e53ac-e6b0-5fc8-80a2-052a8323f1f6-sql,default,List all employees and their reporting manager's name (if any):,"SELECT
  E.FirstName,
  E.LastName,
  M.FirstName AS ManagerFirstName,
  M.LastName AS ManagerLastName
FROM employees AS E
LEFT JOIN employees AS M
  ON E.ReportsTo = M.EmployeeId limit 20",sql
9c41fbfc-f220-557e-9ace-8cf9e5317bab-sql,default, Get the average invoice total for each customer:,"SELECT
  T1.FirstName,
  T1.LastName,
  AVG(T2.Total) AS AverageInvoiceTotal
FROM customers AS T1
INNER JOIN invoices AS T2
  ON T1.CustomerId = T2.CustomerId
GROUP BY
  T1.CustomerId,
  T1.FirstName,
  T1.LastName limit 20",sql
91b2398a-6730-54e7-895a-f1d907335fd7-sql,default,Find the top 5 most expensive tracks (based on unit price):,"SELECT
  TrackId,
  Name,
  UnitPrice
FROM tracks
ORDER BY
  UnitPrice DESC
LIMIT 5;",sql
ccf735c3-ac77-5f73-91fc-4008aee06082-sql,default,List all genres and the number of tracks in each genre:,"SELECT
  T1.Name,
  COUNT(T2.TrackId) AS NumberOfTracks
FROM genres AS T1
INNER JOIN tracks AS T2
  ON T1.GenreId = T2.GenreId
GROUP BY
  T1.Name limit 20",sql
84382640-d65c-5861-bf71-8ba58778348b-sql,default," 
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    ","SELECT
  T1.Name,
  COUNT(T3.TrackId) AS NumberOfTracks
FROM artists AS T1
INNER JOIN albums AS T2
  ON T1.ArtistId = T2.ArtistId
INNER JOIN tracks AS T3
  ON T2.AlbumId = T3.AlbumId
GROUP BY
  T1.Name
ORDER BY
  NumberOfTracks DESC
LIMIT 10;",sql
3bf6e13e-040c-569a-8f2d-1e1d443358db-sql,default,List all customers from Canada and their email addresses:,"SELECT
  FirstName,
  LastName,
  Email
FROM customers
WHERE
  Country = 'Canada' limit 20",sql
11d3a130-7385-54e8-bacd-7eb9b93ce72e-sql,default,Find the customer with the most invoices ,"SELECT
  T1.FirstName,
  T1.LastName,
  COUNT(T2.InvoiceId) AS NumberOfInvoices
FROM customers AS T1
INNER JOIN invoices AS T2
  ON T1.CustomerId = T2.CustomerId
GROUP BY
  T1.CustomerId,
  T1.FirstName,
  T1.LastName
ORDER BY
  NumberOfInvoices DESC
LIMIT 1;",sql
